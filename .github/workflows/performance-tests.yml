name: Performance Tests

on:
  workflow_run:
    workflows: [ "Dockerize" ]
    types:
      - completed
    branches:
      - main
      - develop

jobs:
  Performance-Test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start RabbitMQ
        uses: namoshek/rabbitmq-github-action@v1
        with:
          ports: '5672:5672 15672:15672'
          container-name: 'rabbitmq'

      - name: Start Application Service
        run: |
          docker run -d \
            --name app-service \
            -p 8080:8080 \
            -e "ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${{ secrets.DB_NAME }};Username=${{ secrets.DB_USER }};Password=${{ secrets.DB_PASSWORD }}" \
            -e "Auth__Domain=${{ secrets.AUTH0_DOMAIN }}" \
            -e "Auth__Audience=${{ secrets.AUTH0_AUDIENCE }}" \
            -e "Test__Email=${{ secrets.TEST_EMAIL }}" \
            -e "RabbitMQ=rabbitmq" \
            ${{ secrets.REGISTRY_USERNAME }}/as6-2_osso_user_service:${{ github.ref_name }}

      - name: Install dependencies
        run: yarn

      - name: Retrieve Auth0 Access Token
        uses: Kajatin/auth0-login@v1.0.2
        id: get-token
        with:
          tenant-url: '${{ secrets.AUTH0_DOMAIN }}'
          client-id: '${{ secrets.AUTH0_CLIENT_ID }}'
          client-secret: '${{ secrets.AUTH0_CLIENT_SECRET }}'
          audience: '${{ secrets.AUTH0_AUDIENCE }}'
          grant-type: 'client_credentials'

      - name: Setup K6
        uses: grafana/setup-k6-action@v1
        
      - name: Check app logs
        run: |
          docker logs app-service

      - name: Run k6 tests
        uses: grafana/run-k6-action@v1
        env:
#          K6_CLOUD_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}
#          K6_CLOUD_PROJECT_ID: ${{ secrets.K6_CLOUD_PROJECT_ID }}
          TOKEN: ${{ steps.get-token.outputs.access-token }}
          PROJECT_NAME: 'User Service'
          BRANCH: ${{ github.ref_name }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        with:
          path: load-script.js