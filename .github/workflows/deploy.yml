name: Deploy to AKS with Kubeconfig

on:
  push:
    branches:
      - main  # Adjust to your deployment branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout Code
      uses: actions/checkout@v4

    # Step 2: Set up kubeconfig for AKS
    - name: Write Kubeconfig to File
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        echo "$KUBECONFIG" | base64 --decode > kubeconfig.yaml
        export KUBECONFIG=$(pwd)/kubeconfig.yaml
        echo "KUBECONFIG set to $(pwd)/kubeconfig.yaml"

    - name: Verify kubectl connection to AKS
      run: |
        kubectl config view
        kubectl get nodes

    # Step 3: Log in to ACR
    - name: Log in to ACR
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password-stdin

    # Step 4: Build and push Docker image to ACR
    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/as6-2_osso_user_service:${{ github.sha }}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    # Step 5: Deploy to AKS
    - name: Deploy to AKS
      run: |
        kubectl apply -f deployment.yaml --validate=false
        kubectl set image deployment/user-service user-service=${{ secrets.ACR_NAME }}.azurecr.io/as6-2_osso_user_service:${{ github.sha }}
        kubectl rollout status deployment/user-service
