name: Performance Tests

on:
  workflow_run:
    workflows: [ "Dockerize" ]
    types:
      - completed
    branches:
      - main
      - develop

jobs:
  Performance-Test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start RabbitMQ
        uses: namoshek/rabbitmq-github-action@v1
        with:
          ports: '5672:5672 15672:15672'

      - name: Start Application Service
        run: |
          docker run -d \
            --name app-service \
            -p 8080:8080 \
            -e "ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${{ secrets.DB_NAME }};Username=${{ secrets.DB_USER }};Password=${{ secrets.DB_PASSWORD }}" \
            -e "Auth__Domain=${{ secrets.AUTH0_DOMAIN }}" \
            -e "Auth__Audience=${{ secrets.AUTH0_AUDIENCE }}" \
            -e "Test__Email=${{ secrets.TEST_EMAIL }}" \
            ${{ secrets.REGISTRY_USERNAME }}/as6-2_osso_user_service:${{ github.ref_name }}

      - name: Install dependencies
        run: yarn

      - name: Get Auth0 Token
        id: get-token
        run: |
          TOKEN_RESPONSE=$(curl --request POST \
            --url ${{ secrets.AUTH0_DOMAIN }}/oauth/token \
            --header 'Content-Type: application/json' \
            --data '{
            "client_id": "'"${{ secrets.AUTH0_CLIENT_ID }}"'",
            "client_secret": "'"${{ secrets.AUTH0_CLIENT_SECRET }}"'",
            "audience": "'"${{ secrets.AUTH0_AUDIENCE }}"'",
            "grant_type": "client_credentials"
          }')
          
          echo "Response: $TOKEN_RESPONSE"  # Debugging output
          
          # Parse the token from the response
          TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.access_token')
            
            echo "TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Run k6 tests
        env:
          TOKEN: ${{ env.TOKEN }}
          CLOUD_PROJECT: ${{ secrets.GRAFANA_CLOUD_PROJECT }}
          BRANCH: ${{ github.ref_name }}
          PROJECT_NAME: 'User Service'
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        run: |
          k6 run load-script.js --out cloud