name: Performance Tests

on:
  workflow_run:
    workflows: [ "Dockerize" ]
    types:
      - completed
    branches:
      - non-existent-branch
      # - main
      # - develop

jobs:
  Performance-Test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start RabbitMQ
        uses: namoshek/rabbitmq-github-action@v1
        with:
          ports: '5672:5672 15672:15672'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Start Service
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=${{ secrets.DB_NAME }};Username=${{ secrets.DB_USER }};Password=${{ secrets.DB_PASSWORD }}"
          Auth__Domain: "${{ secrets.AUTH0_DOMAIN }}"
          Auth__Audience: "${{ secrets.AUTH0_AUDIENCE }}"
          Test__Email: "${{ secrets.TEST_EMAIL }}"
        run: | 
          dotnet run --project ./UserService > service.log 2>&1 &
          echo "Waiting for the application to start..."
          until grep -q "Now listening on: http://localhost:5157" service.log; do
            echo "Application not started yet, retrying in 5 seconds..."
            sleep 5
          done
          echo "Application started successfully."

      - name: Install dependencies
        run: yarn

      - name: Retrieve Auth0 Access Token
        uses: Kajatin/auth0-login@v1.0.2
        id: get-token
        with:
          tenant-url: '${{ secrets.AUTH0_DOMAIN }}'
          client-id: '${{ secrets.AUTH0_CLIENT_ID }}'
          client-secret: '${{ secrets.AUTH0_CLIENT_SECRET }}'
          audience: '${{ secrets.AUTH0_AUDIENCE }}'
          grant-type: 'client_credentials'

      - name: Setup K6
        uses: grafana/setup-k6-action@v1

      - name: Run k6 tests
        uses: grafana/run-k6-action@v1
        env:
          K6_CLOUD_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}
          K6_CLOUD_PROJECT_ID: ${{ secrets.K6_CLOUD_PROJECT_ID }}
          TOKEN: ${{ steps.get-token.outputs.access-token }}
          BRANCH: ${{ github.ref_name }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        with:
          path: load-script.js
